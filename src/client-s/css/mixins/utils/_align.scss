@import '../tools/responsive';

/*
 * Align utils.
 */
@mixin align-utils {
  /*
   * Horizontal.
   */
  ._align {
    &[class*='_align _left'] {
      &:not([class*='_align _left _when _']) {
        text-align:           left !important;
      }

      &[class*='_align _left _when _mobile'] {
        @include mobile-only {
          text-align:         left !important;
        }
      }

      &[class*='_align _left _when _handheld'] {
        @include handheld-only {
          text-align:         left !important;
        }
      }

      &[class*='_align _left _when _small _screen'] {
        @include small-screen-only {
          text-align:         left !important;
        }
      }
    }

    &[class*='_align _center'] {
      &:not([class*='_align _center _when _']) {
        text-align:           center !important;

        &.ui.grid > .row > .column,
        &.ui.grid > .column,
        &.row > .column {
          text-align:         center !important;
        }

        &.ui.form > .fields > .field,
        &.ui.form > .field,
        &.fields > .field {
          text-align:         center !important;
        }
      }

      &[class*='_align _center _when _mobile'] {
        @include mobile-only {
          text-align:         center !important;

          &.ui.grid > .row > .column,
          &.ui.grid > .column,
          &.row > .column {
            text-align:       center !important;
          }

          &.ui.form > .fields > .field,
          &.ui.form > .field,
          &.fields > .field {
            text-align:       center !important;
          }
        }
      }

      &[class*='_align _center _when _handheld'] {
        @include handheld-only {
          text-align:         center !important;

          &.ui.grid > .row > .column,
          &.ui.grid > .column,
          &.row > .column {
            text-align:       center !important;
          }

          &.ui.form > .fields > .field,
          &.ui.form > .field,
          &.fields > .field {
            text-align:       center !important;
          }
        }
      }

      &[class*='_align _center _when _small _screen'] {
        @include small-screen-only {
          text-align:         center !important;

          &.ui.grid > .row > .column,
          &.ui.grid > .column,
          &.row > .column {
            text-align:       center !important;
          }

          &.ui.form > .fields > .field,
          &.ui.form > .field,
          &.fields > .field {
            text-align:       center !important;
          }
        }
      }
    }

    &[class*='_align _right'] {
      &:not([class*='_align _right _when _']) {
        text-align:           right !important;
      }

      &[class*='_align _right _when _mobile'] {
        @include mobile-only {
          text-align:         right !important;
        }
      }

      &[class*='_align _right _when _handheld'] {
        @include handheld-only {
          text-align:         right !important;
        }
      }

      &[class*='_align _right _when _small _screen'] {
        @include small-screen-only {
          text-align:         right !important;
        }
      }
    }
  }

  /*
   * Vertical.
   */
  ._valign {
    &[class*='_valign _top'] {
      vertical-align:         top !important;
    }

    &[class*='_valign _middle'] {
      vertical-align:         middle !important;
    }

    &[class*='_valign _bottom'] {
      vertical-align:         bottom !important;
    }

    &[class*='_valign _flex_top'] {
      align-items:            flex-start !important;
    }

    &[class*='_valign _flex_middle'] {
      align-items:            center !important;
    }

    &[class*='_valign _flex_bottom'] {
      align-items:            flex-end !important;
    }
  }

  /*
   * Floats.
   */
  .icon {
    &._float,
    &._push,
    &._pull,
    &._yank {
      // Zero-out existing & set below.
      margin-left:            0 !important;
      margin-right:           0 !important;
    }
  }

  .alignleft,
  img[align='left'],
  ._float[class*='_float _left'],
  ._push[class*='_push _left'],
  ._pull[class*='_pull _left'],
  ._yank[class*='_yank _left'] {
    float:                    left !important;
  }

  ._push[class*='_push _left'],
  ._pull[class*='_pull _left'] {
    margin-right:             1rem !important;
  }

  ._pull[class*='_pull _left'] {
    margin-bottom:            1rem !important;
  }

  .alignleft,
  img[align='left'],
  ._yank[class*='_yank _left'] {
    margin-right:             2rem !important;
    margin-bottom:            2rem !important;
  }

  .alignright,
  img[align='right'],
  ._float[class*='_float _right'],
  ._push[class*='_push _right'],
  ._pull[class*='_pull _right'],
  ._yank[class*='_yank _right'] {
    float:                    right !important;
  }

  ._push[class*='_push _right'],
  ._pull[class*='_pull _right'] {
    margin-left:              1rem !important;
  }

  ._pull[class*='_pull _right'] {
    margin-bottom:            1rem !important;
  }

  .alignright,
  img[align='right'],
  ._yank[class*='_yank _right'] {
    margin-left:              2rem !important;
    margin-bottom:            2rem !important;
  }

  /*
   * Centered.
   */
  ._centered {
    &:not([class*='_centered _when _']) {
      @include centered(true);
    }

    &[class*='_centered _when _mobile'] {
      @include mobile-only {
        @include centered-conversion(true);
      }
    }

    &[class*='_centered _when _handheld'] {
      @include handheld-only {
        @include centered-conversion(true);
      }
    }

    &[class*='_centered _when _small _screen'] {
      @include small-screen-only {
        @include centered-conversion(true);
      }
    }
  }

  .aligncenter {
    @include centered-conversion(true);
  }
}
